1. user登録時に、timezoneを登録する。
userテーブルにカラムを追加。
方法①camroncade/timezoneのライブラリを使って、セレクトボックスにより情報を取得。

方法②moment.jsを使ってtimezoneを登録

２. Create Events
VuetifyでDateとTimeを別々に取得。
Date: 2020-11-20 
Start Time: 13:00
End Time: 14:00

イベント登録じに、comrncade/timzoneで、セレクトボックスによりtimezoneも取得。

３. Event Tableでは、日+時間で値を登録。

$event->date = request("date");
$date = request("date");
$start_time = request("start_time");
$date_starttime = date('Y-m-d H:i:00', strtotime("$date $start_time”));
$event->start_time = $date_starttime

$end_time = request("end_time);
$date_endtime = date('Y-m-d H:i:00', strtotime("$date $end_time));
$event->end_time = $date_endtime

4. Laravel Eloquenst mutator functionを使って、データが登録されるさいの値を操作する。

②Camroncadeの場合
use Camroncade\Timezone\Facades\Timezone;
// ...

/**
 * Set attribute to date format
 * @param $input
 */
public function setStartTimeAttribute($value)
{
    $this->attributes['start_time'] =
        Timezone::convertToUTC($value, event()->timezone,  'Y-m-d H:i:s');
}

public function setEndTimeAttribute($value)
{
    $this->attributes['end_time'] =
        Timezone::convertToUTC($value, event()->timezone,  'Y-m-d H:i:s');
}

5. Laravel Eloquent Accessor functionを使って、データを読み取るさいの値を操作する。

/**
 * Get attribute from date format
 * @param $input
 *
 * @return string
 */
public function getStartTimeAttribute($value)
{
    return Timezone::convertFromUTC($value, auth()->user()->timezone, 'H:i');
}

public function getEndTimeAttribute($value)
{
    return Timezone::convertFromUTC($value, auth()->user()->timezone, 'H:i');
}

6. Vueで読み出す。
